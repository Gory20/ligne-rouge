---
- name: Deploy applications to Kubernetes
  hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Ensure kubernetes Python module is installed
      ansible.builtin.pip:
        name: kubernetes
      register: kubernetes_pip

    - name: Check if kubernetes module installation was successful
      debug:
        msg: "Kubernetes module is installed: {{ kubernetes_pip }}"
        var: kubernetes_pip.results[0]
        when: kubernetes_pip.results[0].state == "present"

    - name: Load Kubernetes config from Terraform output
      set_fact:
        kube_config: "{{ lookup('file', '../terraform/terraform.tfstate') | from_json | json_query('outputs.kube_config.value') }}"

    - name: Deploy Apache application
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../kubernetes/app-deployment.yml') }}"
        kubeconfig: "/home/rootkit/.kube/config"

    - name: Deploy MySQL application
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../kubernetes/db-deployment.yml') }}"
        kubeconfig: "/home/rootkit/.kube/config"

    - name: Create service for Apache application
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../kubernetes/app-service.yml') }}"
        kubeconfig: "/home/rootkit/.kube/config"

    - name: Create service for MySQL application
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../kubernetes/db-service.yml') }}"
        kubeconfig: "/home/rootkit/.kube/config"
